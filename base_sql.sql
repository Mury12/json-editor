-- MySQL Script generated by MySQL Workbench
-- Mon Oct  7 23:32:48 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema golden_robot
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema golden_robot
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `golden_robot` DEFAULT CHARACTER SET utf8 ;
USE `golden_robot` ;

-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `user_pass` VARCHAR(65) NOT NULL,
  `registered_at` DATETIME NOT NULL DEFAULT NOW(),
  `last_login` DATETIME NULL,
  `user_email` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `user_email_UNIQUE` ON `users` (`user_email` ASC) ;


-- -----------------------------------------------------
-- Table `login_sessions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `login_sessions` (
  `id` INT NOT NULL,
  `login_time` DATE NOT NULL DEFAULT NOW(),
  `user_email` VARCHAR(100) NOT NULL,
  `internal_token` VARCHAR(64) NOT NULL,
  `validated` TINYINT(1) NOT NULL DEFAULT 0,
  `sent_token` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_user_mail`
    FOREIGN KEY (`user_email`)
    REFERENCES `users` (`user_email`)
    ON DELETE NO ACTION
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_user_mail_idx` ON `login_sessions` (`user_email` ASC) ;


-- -----------------------------------------------------
-- Table `robots`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `robots` (
  `robot_id` INT NOT NULL AUTO_INCREMENT,
  `robot_number` INT(11) NOT NULL,
  `robot_price` DOUBLE(10,2) NOT NULL,
  `robot_description` TEXT NULL,
  `robot_sold_counter` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`robot_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `robot_number_UNIQUE` ON `robots` (`robot_number` ASC) ;


-- -----------------------------------------------------
-- Table `robot_owners`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `robot_owners` (
  `owner_id` INT NOT NULL AUTO_INCREMENT,
  `owner_name` VARCHAR(100) NOT NULL,
  `owner_token` VARCHAR(65) NOT NULL,
  `owner_key` VARCHAR(65) NOT NULL,
  `owner_email` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`owner_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `owner_token_UNIQUE` ON `robot_owners` (`owner_token` ASC) ;

CREATE UNIQUE INDEX `owner_email_UNIQUE` ON `robot_owners` (`owner_email` ASC) ;


-- -----------------------------------------------------
-- Table `platforms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `platforms` (
  `platform_id` INT NOT NULL AUTO_INCREMENT,
  `platform_name` VARCHAR(45) NOT NULL,
  `platform_description` TEXT NOT NULL,
  `platform_code` VARCHAR(45) NULL,
  PRIMARY KEY (`platform_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `robot_orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `robot_orders` (
  `order_id` INT NOT NULL AUTO_INCREMENT,
  `owner_id` INT NOT NULL,
  `robot_number` INT(11) NOT NULL,
  `robot_platform` INT NOT NULL,
  `order_expires_at` DATE NOT NULL,
  `order_renew_expires_at` DATE NULL,
  `order_comment` TEXT NULL,
  PRIMARY KEY (`order_id`),
  CONSTRAINT `fk_robot_id`
    FOREIGN KEY (`robot_number`)
    REFERENCES `robots` (`robot_number`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_owner_id`
    FOREIGN KEY (`owner_id`)
    REFERENCES `robot_owners` (`owner_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_platform_id`
    FOREIGN KEY (`robot_platform`)
    REFERENCES `platforms` (`platform_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_robot_id_idx` ON `robot_orders` (`robot_number` ASC) ;

CREATE INDEX `fk_owner_id_idx` ON `robot_orders` (`owner_id` ASC) ;

CREATE INDEX `fk_platform_id_idx` ON `robot_orders` (`robot_platform` ASC) ;


-- -----------------------------------------------------
-- Table `robot_auth`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `robot_auth` (
  `auth_id` INT NOT NULL AUTO_INCREMENT,
  `robot_order_id` INT NOT NULL,
  `auth_token` VARCHAR(65) NOT NULL,
  `auth_key` VARCHAR(65) NOT NULL,
  `from_ip` VARCHAR(45) NOT NULL,
  `time` DATETIME NOT NULL DEFAULT NOW(),
  `expired` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`auth_id`),
  CONSTRAINT `fk_robot_order_id`
    FOREIGN KEY (`robot_order_id`)
    REFERENCES `robot_orders` (`order_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_robot_order_id_idx` ON `robot_auth` (`robot_order_id` ASC) ;


-- -----------------------------------------------------
-- Table `order_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `order_detail` (
  `detail_id` INT NOT NULL AUTO_INCREMENT,
  `token` VARCHAR(65) NOT NULL,
  `key` VARCHAR(65) NOT NULL,
  `password` VARCHAR(65) NOT NULL,
  `order_id` INT NOT NULL,
  PRIMARY KEY (`detail_id`),
  CONSTRAINT `fk_order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `robot_orders` (`order_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `order_id_UNIQUE` ON `order_detail` (`order_id` ASC) ;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
